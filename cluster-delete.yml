- name: "Play for cluster deletion"
  hosts: localhost
  gather_facts: yes
  become: yes
  tasks:
  - name: "Validating Cluster name is provided"
    assert: 
      that: cluster_to_delete is defined
      fail_msg: "You must set 'cluster_to_delete' as input via extra-args to the name of the cluster marked for deletion."
      success_msg: "Cluster name is provided, validation passed"

  - name: "Prompt for user response"
    user_prompt:
      prompt: "Do you want to continue to delete cluster={{ cluster_to_delete }}, with the values defined in {{ playbook_dir }}/host_vars/localhost/defaults.yml?"
      passing_response: ['y','Y','yes','YES']
      abort_response: ['n','n','no','NO']
    when: user_conformation|default(True)
  
  - name: "List the Existing KVM present on the host machine"
    community.libvirt.virt:
      command: list_vms
    register: all_vms

  - debug: 
      msg: "{{ all_vms.list_vms |select('search','^' + cluster_to_delete + '-.*') }}"

  - name: "Display the info of the VM"
    community.libvirt.virt:
      command: "info"
      name: "{{ item }}"
    loop: "{{ all_vms.list_vms |select('search','^' + cluster_to_delete + '-.*') }}"
    register: vm_info

  - debug:
      msg: "{{ vm_info }}"

  - name: "Destroy(shutdown) the VM"
    community.libvirt.virt:
      command: "destroy"
      name: "{{ item }}"
    loop: "{{ all_vms.list_vms |select('search','^' + cluster_to_delete + '-.*') }}"
    register: vm_destroy

  - debug:
      msg: "{{ vm_destroy }}"

  - name: "Delete (shutdown) the VM"
    community.libvirt.virt:
      command: "undefine"
      name: "{{ item }}"
    loop: "{{ all_vms.list_vms |select('search','^' + cluster_to_delete + '-.*') }}"
    register: vm_undefine

  - debug:
      msg: "{{ vm_undefine }}"

  - name: "Delete the disk of the VM"
    file:
      state: absent
      path: "{{ vm_disk_storage }}/{{ item}}"
    loop: "{{ all_vms.list_vms |select('search','^' + cluster_to_delete + '-.*') }}"
    when: delete_disk|default(true) | bool
  
   
